name: packerbuild

on:
  push:
    branches:
      - main

jobs:
  packerbuild:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    permissions:
          contents: 'read'
          id-token: 'write'   
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run compile check
      run: npm run build

    - name: Create .env File
      run: echo "${{ secrets.ENV_CONTENTS }}" > .env

    - name: Run tests
      run: npm test
    
    - name: Install Packer
      run: |
          wget https://releases.hashicorp.com/packer/1.7.6/packer_1.7.6_linux_amd64.zip
          unzip packer_1.7.6_linux_amd64.zip
          sudo mv packer /usr/local/bin/
          packer version


    - name: Initialize packer
      run: |
          packer init .

    - name: Run packer fmt
      run: |
          set -e
          packer fmt -check .

    - name: Run packer validate
      run: |
          set -e
          packer validate .
    
    - name: Set up Google Cloud SDK
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_PACKER }}

    - name: Debug GCP_APPLICATION_CREDENTIALS secret
      run: echo "${{ secrets.GCP_CREDENTIALS_PACKER }}"

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Run packer build
      run: packer build .

    - name: Authenticate with GCP
      uses: 'google-github-actions/auth@v2'
      with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_FOR_INSTANCE }}

    - name: Debug GCP_APPLICATION_CREDENTIALS secret
      run: echo "${{ secrets.GCP_CREDENTIALS_FOR_INSTANCE }}"

    - name: Get latest image
      id: get-latest-image
      run: |
        IMAGE=$(gcloud compute images list --format="value(NAME)" --filter="name=packer-*" --sort-by="~creationTimestamp" | head -n 1)
        echo $IMAGE 

    - name: Create New Instance Template Version
      run: |
          gcloud compute instance-templates create csye6225-instance-template \
          --image=${{ steps.get-latest-image.outputs.image }} --image-project=dev-csye6225-415809
      
    - name: Complete workflow
      run: echo "Workflow completed successfully!"
